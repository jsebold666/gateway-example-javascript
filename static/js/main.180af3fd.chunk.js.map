{"version":3,"sources":["components/Form/styles.js","components/styles.js","components/Input/styles.js","components/Input/index.js","components/RadioGroup/index.js","components/CheckBox/index.js","utils/typesUtils.js","utils/pixKeyTypes.js","utils/generatePropsRandom.js","components/Form/index.js","services/argon2i.js","utils/base64.js","app/styles.js","components/RequestJson/styles.js","components/RequestJson/index.js","app/index.js","index.js"],"names":["Container","styled","div","ContainerHeight","height","ContainerCheckTypes","FormLabelCustom","h2","ContainerRow","ContainerFlexWidth","widthPercent","InputCustom","TextField","Input","label","value","setValue","id","size","variant","onChange","e","target","StyledFormControlLabel","props","FormControlLabel","theme","checked","color","palette","primary","main","MyFormControlLabel","defaultCheckedValue","useRadioGroup","UseRadioGroup","labelGroup","checkData","setChecked","validDirection","direction","FormLabel","style","userSelect","marginTop","component","RadioGroup","defaultValue","name","event","flexDirection","map","data","control","Radio","CheckboxesGroup","isChecked","FormControl","sx","m","mr","FormGroup","Checkbox","typesList","WIRETRANFER","BILLET","PIX","WALLET","PixKeyTypes","getRandomMerchantTransactionId","uuidv4","replace","substring","getRandomUserAccountId","Form","setData","setGateway_token","gateway_token","setUrlGenerated","base_url","setBaseUrl","typeFormSelected","React","useState","merchant_id","setMerchantId","merchant_transaction_id","setMerchantTransactionId","email","setEmail","document_number","setDocumentNumber","account_id","setAccountId","currency","setCurrency","operation","setOperation","amount","setAmount","callback_url","setcCallback_url","redirect_url","setRedirect_url","typesCheckeds","setTypesCheckeds","type","setType","selected_type","setSelected_type","checkDataSelectedType","setCheckDataSelectedType","pix_key_type","setPix_key_type","pix_key","setPix_key","setTypesChecked","typeKey","newTypesCheckeds","newType","binTypePix","binTypeBillet","binTypeWireTransfer","binTypeWallet","parseInt","toString","getTypeInteger","useEffect","newCheckDataSelectedType","push","enableCheckDataSelectedType","isWithdraw","oldData","auto_approve","marginBottom","alignItems","margin","Button","onClick","width","textTransform","argon2","require","getArgon2i","pass","a","hash","salt","time","mem","parallelism","hashLen","ArgonType","Argon2i","then","encoded","catch","console","error","message","code","argon2i","utf8_to_b64","str","window","btoa","unescape","encodeURIComponent","ContainerResult","PColor","p","RequestJson","dataRequest","url","urlGateway","textButton","rest","handleCopyToClipboard","dataRequestJson","JSON","stringify","textToCopy","copyToClipboard","textToNotification","NotificationManager","success","IconButtonMain","OpenInNewIcon","ContentCopyIcon","handleButtonAction","open","paddingTop","endIcon","marginLeft","maxWidth","background","App","urlGenerated","setURL","setUrlGateway","getUrlGateway","DataURL","signature","calback_url","mock_type","mock_auto_approve","Signature","handleGenerateSignature","urlWithoutSignature","valueToGetArgon2iHash","argon2iHash","handleGenerateURL","toUpperCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.180af3fd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 45%;\r\n  height: auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0px 20px 20px 20px;\r\n  background-color: #ffffff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContainerHeight = styled.div`\r\n  width: 100%;\r\n  height: ${({ height }) => (height ? `${height}px` : 0)};\r\n`;\r\n\r\nexport const ContainerCheckTypes = styled.div`\r\n  width: 100%;\r\n  flex-direction: row;\r\n  height: auto;\r\n`;\r\n\r\nexport const FormLabelCustom = styled.h2`\r\n  font-size: 18px;\r\n  color: grey;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContainerRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: auto;\r\n  @media (max-width: 930px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const ContainerFlexWidth = styled.div`\r\n  width: ${({ widthPercent }) => (widthPercent ? `${widthPercent}%` : \"100%\")};\r\n  flex-direction: row;\r\n  height: auto;\r\n  @media (max-width: 930px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nexport const InputCustom = styled(TextField)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { InputCustom } from \"./styles\";\r\n\r\nfunction Input({ label, value, setValue }) {\r\n  return (\r\n    <InputCustom\r\n      value={value}\r\n      id=\"outlined-basic\"\r\n      label={label}\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      onChange={(e) => setValue(e.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport RadioGroup, { useRadioGroup } from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\n// import { Container } from './styles';\r\n\r\nconst StyledFormControlLabel = styled((props) => (\r\n  <FormControlLabel {...props} />\r\n))(({ theme, checked }) => ({\r\n  \".MuiFormControlLabel-label\": checked && {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nfunction MyFormControlLabel({ defaultCheckedValue, ...props }) {\r\n  const radioGroup = useRadioGroup();\r\n  let checked = false;\r\n  if (radioGroup) {\r\n    checked = defaultCheckedValue === props.value;\r\n  }\r\n\r\n  return <StyledFormControlLabel checked={checked} {...props} />;\r\n}\r\n\r\nexport default function UseRadioGroup({\r\n  labelGroup,\r\n  checkData = [],\r\n  defaultCheckedValue,\r\n  setChecked,\r\n  direction,\r\n}) {\r\n  const validDirection = direction || \"row\";\r\n\r\n  return (\r\n    <>\r\n      <FormLabel\r\n        style={{ userSelect: \"none\", marginTop: -13 }}\r\n        component=\"legend\"\r\n      >\r\n        {labelGroup}\r\n      </FormLabel>\r\n      <RadioGroup\r\n        defaultValue=\"first\"\r\n        name=\"use-radio-group\"\r\n        onChange={(event) => setChecked(event.target.value)}\r\n        style={{ flexDirection: validDirection }}\r\n      >\r\n        {checkData.map((data) => (\r\n          <MyFormControlLabel\r\n            key={data.value}\r\n            defaultCheckedValue={defaultCheckedValue}\r\n            value={data.value}\r\n            label={data.label}\r\n            control={<Radio />}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport default function CheckboxesGroup({ isChecked, setChecked, label }) {\r\n  return (\r\n    <FormControl sx={{ m: 0, mr: 3 }} component=\"fieldset\" variant=\"standard\">\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          style={{ userSelect: \"none\" }}\r\n          label={label || \"\"}\r\n          control={\r\n            <Checkbox\r\n              checked={isChecked}\r\n              onChange={(event) => setChecked(event.target.checked)}\r\n              name=\"gilad\"\r\n            />\r\n          }\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","// 0000 - 0 - Nenhum\r\n// 0001 - 1 - Pix\r\n// 0010 - 2 - Boleto\r\n// 0011 - 3 - Boleto, Pix\r\n// 0100 - 4 - TED\r\n// 0101 - 5 - TED, Pix\r\n// 0110 - 6 - TED, Boleto\r\n// 0111 - 7 - TED, Boleto, PIX\r\n// 1000 - 8 - Wallet\r\n// 1001 - 9 - Wallet, Pix\r\n// 1010 - 10 - Wallet, Boleto\r\n// 1011 - 11 - Wallet, Boleto, Pix\r\n// 1100 - 12 - Wallet, Ted\r\n// 1101 - 13 - Wallet, Ted, Pix\r\n// 1110 - 14 - Wallet, Ted, Boleto\r\n// 1111 - 15 - Wallet, Ted, Boleto, Pix (Todas)\r\n\r\n// 0 - TED\r\n// 1 - Boleto\r\n// 4 - PIX\r\n// 5 - Wallet\r\nexport const typesList = {\r\n  WIRETRANFER: 0,\r\n  BILLET: 1,\r\n  PIX: 4,\r\n  WALLET: 5,\r\n};\r\n\r\nexport function getTypeInteger(typesCheckeds) {\r\n  const binTypePix = typesCheckeds[4] ? \"1\" : \"0\";\r\n  const binTypeBillet = typesCheckeds[1] ? \"1\" : \"0\";\r\n  const binTypeWireTransfer = typesCheckeds[0] ? \"1\" : \"0\";\r\n  const binTypeWallet = typesCheckeds[5] ? \"1\" : \"0\";\r\n  const typeInBinary =\r\n    binTypeWallet + binTypeWireTransfer + binTypeBillet + binTypePix;\r\n  const typeInInteger = parseInt(typeInBinary, 2);\r\n  return typeInInteger.toString();\r\n}\r\n","// pix_key_type\r\n// 0 - document (cpf/cnpf)\r\n// 2 - phone\r\n// 3 - email\r\n\r\nexport const PixKeyTypes = {\r\n  document: \"0\",\r\n  phone: \"2\",\r\n  email: \"3\",\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport function getRandomMerchantTransactionId() {\r\n  const randomMerchantTransactionId = uuidv4().replace(/-/g, \"\");\r\n  return randomMerchantTransactionId.substring(0, 10);\r\n}\r\n\r\nexport function getRandomUserAccountId() {\r\n  const randomMerchantTransactionId = uuidv4().replace(/-/g, \"\");\r\n  return randomMerchantTransactionId.substring(0, 6);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport {\r\n  Container,\r\n  FormLabelCustom,\r\n  ContainerHeight,\r\n  ContainerCheckTypes,\r\n} from \"./styles\";\r\n\r\nimport { ContainerRow, ContainerFlexWidth } from \"../styles\";\r\n\r\nimport Input from \"../Input\";\r\nimport RadioGroup from \"../RadioGroup\";\r\nimport Checkbox from \"../CheckBox\";\r\nimport { typesList, getTypeInteger } from \"../../utils/typesUtils\";\r\nimport { PixKeyTypes } from \"../../utils/pixKeyTypes\";\r\n\r\nimport {\r\n  getRandomMerchantTransactionId,\r\n  getRandomUserAccountId,\r\n} from \"../../utils/generatePropsRandom\";\r\n\r\nfunction Form({\r\n  setData,\r\n  setGateway_token,\r\n  gateway_token,\r\n  setUrlGenerated,\r\n  base_url,\r\n  setBaseUrl,\r\n  typeFormSelected,\r\n}) {\r\n  const operation_deposit = \"0\";\r\n  const operation_withdraw = \"5\";\r\n  const [merchant_id, setMerchantId] = React.useState(\"19\");\r\n  const [merchant_transaction_id, setMerchantTransactionId] = React.useState(\r\n    getRandomMerchantTransactionId()\r\n  );\r\n  const [email, setEmail] = React.useState(\"person_user_gateway@test.com\");\r\n  const [document_number, setDocumentNumber] = React.useState(\"60712326006\");\r\n  const [account_id, setAccountId] = React.useState(getRandomUserAccountId());\r\n  const [currency, setCurrency] = React.useState(\"BRL\");\r\n  const [operation, setOperation] = React.useState(operation_deposit);\r\n  const [amount, setAmount] = React.useState(\"500\");\r\n  const [callback_url, setcCallback_url] = React.useState(\r\n    \"https://www.merchant.com\"\r\n  );\r\n  const [redirect_url, setRedirect_url] = React.useState(\r\n    \"https://www.merchant_to_you.com\"\r\n  );\r\n  const [typesCheckeds, setTypesCheckeds] = React.useState({\r\n    [typesList.WIRETRANFER]: false,\r\n    [typesList.BILLET]: false,\r\n    [typesList.PIX]: true,\r\n    [typesList.WALLET]: false,\r\n  });\r\n  const [type, setType] = React.useState(\"1\");\r\n  const [selected_type, setSelected_type] = React.useState(\"4\");\r\n  const [checkDataSelectedType, setCheckDataSelectedType] = React.useState([]);\r\n  const [pix_key_type, setPix_key_type] = React.useState(PixKeyTypes.document);\r\n  const [pix_key, setPix_key] = React.useState(\"60712326006\");\r\n\r\n  function setTypesChecked(typeKey, isChecked) {\r\n    const newTypesCheckeds = { ...typesCheckeds, [typeKey]: isChecked };\r\n    setTypesCheckeds(newTypesCheckeds);\r\n    const newType = getTypeInteger(newTypesCheckeds);\r\n    setType(newType);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function enableCheckDataSelectedType() {\r\n      const newCheckDataSelectedType = [];\r\n      if (typesCheckeds[4]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.PIX.toString(),\r\n          label: \"Pix\",\r\n        });\r\n      }\r\n      if (typesCheckeds[1]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.BILLET.toString(),\r\n          label: \"Billet\",\r\n        });\r\n      }\r\n      if (typesCheckeds[0]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.WIRETRANFER.toString(),\r\n          label: \"Wire Transfer\",\r\n        });\r\n      }\r\n      if (typesCheckeds[5]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.WALLET.toString(),\r\n          label: \"Paylivre Wallet\",\r\n        });\r\n      }\r\n      setCheckDataSelectedType(newCheckDataSelectedType);\r\n    }\r\n    enableCheckDataSelectedType();\r\n  }, [typesCheckeds]);\r\n\r\n  useEffect(() => {\r\n    const auto_approve = \"1\";\r\n    // Toda vez que alterar algum dado no data\r\n    setUrlGenerated(false);\r\n\r\n    const isWithdraw = operation === operation_withdraw;\r\n\r\n    setData((oldData) => {\r\n      return {\r\n        ...oldData,\r\n        account_id,\r\n        amount,\r\n        auto_approve,\r\n        callback_url,\r\n        currency,\r\n        document_number,\r\n        email,\r\n        merchant_id,\r\n        operation,\r\n        merchant_transaction_id,\r\n        redirect_url,\r\n        selected_type,\r\n        type,\r\n        pix_key_type: isWithdraw ? pix_key_type : \"\",\r\n        pix_key: isWithdraw ? pix_key : \"\",\r\n      };\r\n    });\r\n  }, [\r\n    setData,\r\n    merchant_id,\r\n    merchant_transaction_id,\r\n    email,\r\n    document_number,\r\n    account_id,\r\n    currency,\r\n    operation,\r\n    amount,\r\n    callback_url,\r\n    redirect_url,\r\n    setUrlGenerated,\r\n    gateway_token,\r\n    base_url,\r\n    type,\r\n    selected_type,\r\n    pix_key_type,\r\n    pix_key,\r\n  ]);\r\n\r\n  function handleReloadRandomFormtData() {\r\n    setMerchantTransactionId(getRandomMerchantTransactionId());\r\n    setAccountId(getRandomUserAccountId());\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerRow\r\n        style={{ marginBottom: 20, height: 50, alignItems: \"center\" }}\r\n      >\r\n        <ContainerFlexWidth widthPercent={48}>\r\n          <FormLabelCustom style={{ margin: 0 }}>\r\n            Merchant Data:\r\n          </FormLabelCustom>\r\n        </ContainerFlexWidth>\r\n        <ContainerFlexWidth widthPercent={50} style={{}}>\r\n          <Button\r\n            onClick={() => handleReloadRandomFormtData()}\r\n            style={{\r\n              width: \"100%\",\r\n              textTransform: \"none\",\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            Reload Random Data\r\n          </Button>\r\n        </ContainerFlexWidth>\r\n      </ContainerRow>\r\n      <ContainerRow>\r\n        <ContainerFlexWidth widthPercent={48}>\r\n          <Input\r\n            value={merchant_id}\r\n            setValue={(value) => setMerchantId(value)}\r\n            label=\"Merchant ID:\"\r\n          />\r\n          <ContainerHeight height={15} />\r\n        </ContainerFlexWidth>\r\n        <ContainerFlexWidth widthPercent={45}>\r\n          <Input\r\n            value={merchant_transaction_id}\r\n            setValue={(value) => setMerchantTransactionId(value)}\r\n            label=\"Merchant Transaction ID:\"\r\n          />\r\n        </ContainerFlexWidth>\r\n      </ContainerRow>\r\n\r\n      <ContainerHeight height={5} />\r\n      <Input\r\n        value={gateway_token}\r\n        setValue={(value) => setGateway_token(value)}\r\n        label=\"Gateway Token:\"\r\n      />\r\n\r\n      <FormLabelCustom>User Data:</FormLabelCustom>\r\n      <Input\r\n        value={email}\r\n        setValue={(value) => setEmail(value)}\r\n        label=\"User Email:\"\r\n      />\r\n      <ContainerHeight height={20} />\r\n      <ContainerRow>\r\n        <ContainerFlexWidth widthPercent={48}>\r\n          <Input\r\n            value={document_number}\r\n            setValue={(value) => setDocumentNumber(value)}\r\n            label=\"User Document Number (CPF/CNPJ):\"\r\n          />\r\n        </ContainerFlexWidth>\r\n\r\n        <ContainerFlexWidth widthPercent={48}>\r\n          <Input\r\n            value={account_id}\r\n            setValue={(value) => setAccountId(value)}\r\n            label=\"User Account ID in Merchant:\"\r\n          />\r\n        </ContainerFlexWidth>\r\n      </ContainerRow>\r\n\r\n      <FormLabelCustom>Transaction Data:</FormLabelCustom>\r\n      <ContainerRow>\r\n        <ContainerFlexWidth widthPercent={48}>\r\n          <Input\r\n            value={amount}\r\n            setValue={(value) => setAmount(value)}\r\n            label=\"Amount:\"\r\n          />\r\n        </ContainerFlexWidth>\r\n\r\n        <ContainerFlexWidth widthPercent={48}>\r\n          <RadioGroup\r\n            defaultCheckedValue={currency}\r\n            setChecked={(value) => setCurrency(value)}\r\n            labelGroup=\"Currency\"\r\n            checkData={[\r\n              { value: \"BRL\", label: \"BRL\" },\r\n              { value: \"USD\", label: \"USD\" },\r\n            ]}\r\n          />\r\n        </ContainerFlexWidth>\r\n      </ContainerRow>\r\n\r\n      <ContainerHeight height={15} />\r\n      <RadioGroup\r\n        defaultCheckedValue={operation}\r\n        setChecked={(value) => setOperation(value)}\r\n        labelGroup=\"Operation\"\r\n        checkData={[\r\n          { value: \"0\", label: \"Deposit\" },\r\n          { value: \"5\", label: \"Withdraw\" },\r\n        ]}\r\n      />\r\n      <ContainerHeight height={15} />\r\n      <FormLabel component=\"legend\">Type passed by merchant</FormLabel>\r\n      <ContainerCheckTypes>\r\n        <Checkbox\r\n          label=\"PIX\"\r\n          isChecked={typesCheckeds[typesList.PIX]}\r\n          setChecked={(isChecked) => setTypesChecked(typesList.PIX, isChecked)}\r\n        />\r\n        <Checkbox\r\n          label=\"Billet\"\r\n          isChecked={typesCheckeds[typesList.BILLET]}\r\n          setChecked={(isChecked) =>\r\n            setTypesChecked(typesList.BILLET, isChecked)\r\n          }\r\n        />\r\n        <Checkbox\r\n          label=\"Wire Transfer\"\r\n          isChecked={typesCheckeds[typesList.WIRETRANFER]}\r\n          setChecked={(isChecked) =>\r\n            setTypesChecked(typesList.WIRETRANFER, isChecked)\r\n          }\r\n        />\r\n        <Checkbox\r\n          label=\"Paylivre Wallet\"\r\n          isChecked={typesCheckeds[typesList.WALLET]}\r\n          setChecked={(isChecked) =>\r\n            setTypesChecked(typesList.WALLET, isChecked)\r\n          }\r\n        />\r\n      </ContainerCheckTypes>\r\n      {typeFormSelected === \"json\" && operation === operation_withdraw && (\r\n        <>\r\n          <ContainerHeight height={15} />\r\n          <RadioGroup\r\n            defaultCheckedValue={selected_type}\r\n            setChecked={(value) => setSelected_type(value)}\r\n            labelGroup=\"User selected type\"\r\n            checkData={checkDataSelectedType}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {typeFormSelected === \"json\" && operation === operation_withdraw && (\r\n        <ContainerRow>\r\n          <ContainerFlexWidth widthPercent={48}>\r\n            <ContainerHeight height={25} />\r\n            <RadioGroup\r\n              defaultCheckedValue={pix_key_type}\r\n              setChecked={(value) => setPix_key_type(value)}\r\n              labelGroup=\"Pix Key Type\"\r\n              checkData={[\r\n                { value: PixKeyTypes.document, label: \"CPF/CNPJ\" },\r\n                { value: PixKeyTypes.phone, label: \"Phone\" },\r\n                { value: PixKeyTypes.email, label: \"Email\" },\r\n              ]}\r\n            />\r\n          </ContainerFlexWidth>\r\n\r\n          <ContainerFlexWidth widthPercent={48}>\r\n            <ContainerHeight height={30} />\r\n            <Input\r\n              value={pix_key}\r\n              setValue={(value) => setPix_key(value)}\r\n              label=\"User Pix Key\"\r\n            />\r\n          </ContainerFlexWidth>\r\n        </ContainerRow>\r\n      )}\r\n\r\n      <ContainerHeight height={15} />\r\n      <Input\r\n        value={callback_url}\r\n        setValue={(value) => setcCallback_url(value)}\r\n        label=\"Callback URL:\"\r\n      />\r\n      <ContainerHeight height={20} />\r\n\r\n      <Input\r\n        value={redirect_url}\r\n        setValue={(value) => setRedirect_url(value)}\r\n        label=\"Redirect URL:\"\r\n      />\r\n\r\n      <ContainerHeight height={15} />\r\n      <FormLabelCustom>Environment:</FormLabelCustom>\r\n      <Input\r\n        value={base_url}\r\n        setValue={(value) => setBaseUrl(value)}\r\n        label=\"Base URL\"\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","const argon2 = require(\"argon2-browser\");\r\n\r\nexport async function getArgon2i(pass) {\r\n  const argon2i = await argon2\r\n    .hash({\r\n      pass,\r\n      salt: \"dZk8N6kUaA32XCsS\",\r\n      time: 2,\r\n      mem: 16,\r\n      parallelism: 1,\r\n      hashLen: 16,\r\n      type: argon2.ArgonType.Argon2i,\r\n    })\r\n    .then((hash) => hash.encoded)\r\n    .catch((e) => console.error(e.message, e.code));\r\n  return argon2i;\r\n}\r\n","export function utf8_to_b64(str) {\r\n  return window.btoa(unescape(encodeURIComponent(str)));\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  padding: 10px;\r\n  background: #fff;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const ContainerResult = styled.div`\r\n  width: 40%;\r\n  margin-left: 20px;\r\n  height: auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0px 20px 20px 20px;\r\n  background-color: #ffffff;\r\n  border-radius: 5px;\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background: #292929;\r\n  width: auto;\r\n  height: auto;\r\n  min-height: 100px;\r\n  justify-content: center;\r\n  padding: 0 20px 20px 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const PColor = styled.p`\r\n  font-size: small;\r\n  color: ${({ color }) => color || \"#fff\"};\r\n  margin: 0;\r\n  max-width: 100%;\r\n  display: flex;\r\n  font-size: 14px;\r\n  word-break: break-all;\r\n  font-family: \"Courier New\", Courier, monospace;\r\n`;\r\n\r\nexport const FormLabelCustom = styled.h2`\r\n  font-size: 18px;\r\n  color: white;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n","import React from \"react\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport copyToClipboard from \"copy-to-clipboard\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport Button from \"@mui/material/Button\";\r\nimport JSONPretty from \"react-json-pretty\";\r\nimport \"./jsonStyle.css\";\r\nimport { Container, PColor, FormLabelCustom } from \"./styles\";\r\nimport { ContainerRow, ContainerFlexWidth } from \"../styles\";\r\n\r\nfunction RequestJson({\r\n  dataRequest,\r\n  url,\r\n  urlGateway,\r\n  label,\r\n  textButton,\r\n  type,\r\n  ...rest\r\n}) {\r\n  function handleCopyToClipboard() {\r\n    const dataRequestJson = JSON.stringify({ ...dataRequest, url });\r\n    const textToCopy = type === \"url\" ? urlGateway : dataRequestJson;\r\n    copyToClipboard(textToCopy);\r\n    const textToNotification = type === \"url\" ? \"Copied URL\" : \"JSON Copied\";\r\n    NotificationManager.success(textToNotification, \"\", 1000);\r\n  }\r\n\r\n  const IconButtonMain = type === \"url\" ? OpenInNewIcon : ContentCopyIcon;\r\n\r\n  function handleOpenUrlNewWindow() {\r\n    window.open(urlGateway);\r\n  }\r\n\r\n  function handleButtonAction() {\r\n    if (type === \"url\") {\r\n      handleOpenUrlNewWindow();\r\n    } else {\r\n      handleCopyToClipboard();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container {...rest}>\r\n      <ContainerRow\r\n        style={{ alignItems: \"center\", paddingTop: 10, marginBottom: 10 }}\r\n      >\r\n        <ContainerFlexWidth widthPercent={50}>\r\n          <FormLabelCustom>{label}</FormLabelCustom>\r\n        </ContainerFlexWidth>\r\n        <ContainerFlexWidth widthPercent={50}>\r\n          <Button\r\n            endIcon={<IconButtonMain />}\r\n            onClick={() => handleButtonAction()}\r\n            style={{ width: \"100%\", textTransform: \"none\" }}\r\n            variant=\"contained\"\r\n          >\r\n            {textButton}\r\n          </Button>\r\n        </ContainerFlexWidth>\r\n        {type === \"url\" && (\r\n          <ContainerFlexWidth\r\n            widthPercent={50}\r\n            style={{ marginLeft: 20, maxWidth: 140 }}\r\n          >\r\n            <Button\r\n              endIcon={<ContentCopyIcon />}\r\n              onClick={() => handleCopyToClipboard()}\r\n              style={{\r\n                width: \"100%\",\r\n                textTransform: \"none\",\r\n                background: \"#fff\",\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              Copy URL\r\n            </Button>\r\n          </ContainerFlexWidth>\r\n        )}\r\n      </ContainerRow>\r\n\r\n      <NotificationContainer />\r\n\r\n      {dataRequest && (\r\n        <JSONPretty id=\"json-pretty\" data={{ ...dataRequest, url }} />\r\n      )}\r\n\r\n      {urlGateway && <PColor color=\"#ffff80\">{urlGateway}</PColor>}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RequestJson;\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Form from \"../components/Form\";\r\nimport { getArgon2i } from \"../services/argon2i\";\r\nimport { utf8_to_b64 } from \"../utils/base64\";\r\nimport { Container, ContainerResult } from \"./styles\";\r\n\r\nimport { ContainerRow, ContainerFlexWidth } from \"../components/styles\";\r\n\r\nimport RequestJson from \"../components/RequestJson\";\r\n\r\nfunction App() {\r\n  const [base_url, setBaseUrl] = React.useState(\r\n    \"https://dev.gateway.paylivre.com\"\r\n  );\r\n  const [data, setData] = React.useState({});\r\n  const [gateway_token, setGateway_token] = React.useState(\"teste\");\r\n  const [urlGenerated, setUrlGenerated] = React.useState(false);\r\n  const [url, setURL] = React.useState(\"\");\r\n  const [urlGateway, setUrlGateway] = React.useState(\"\");\r\n  const [typeFormSelected, setTypeFormSelected] = React.useState(\"url\");\r\n\r\n  function getUrlGateway(DataURL, signature) {\r\n    const merchant_transaction_id = `merchant_transaction_id=${DataURL.merchant_transaction_id}`;\r\n    const merchant_id = `merchant_id=${DataURL.merchant_id}`;\r\n    const account_id = `account_id=${DataURL.account_id}`;\r\n    const amount = `amount=${DataURL.amount}`;\r\n    const currency = `currency=${DataURL.currency}`;\r\n    const operation = `operation=${DataURL.operation}`;\r\n    const calback_url = `callback_url=${DataURL.callback_url}`;\r\n    const redirect_url = `redirect_url=${DataURL.redirect_url}`;\r\n    const mock_type = `type=${DataURL.type}`;\r\n    const mock_auto_approve = `auto_approve=${DataURL.auto_approve}`;\r\n    const Signature = signature ? `&signature=${signature}` : \"\";\r\n\r\n    const email = DataURL.email ? `&email=${DataURL.email}` : \"\";\r\n    const document_number = DataURL.document_number\r\n      ? `&document_number=${DataURL.document_number}`\r\n      : \"\";\r\n\r\n    const UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}&${mock_type}&${account_id}&${calback_url}&${redirect_url}&${mock_auto_approve}${Signature}`;\r\n\r\n    return UrlGateway;\r\n  }\r\n\r\n  async function handleGenerateSignature() {\r\n    const urlWithoutSignature = getUrlGateway(data);\r\n\r\n    const valueToGetArgon2iHash = gateway_token + urlWithoutSignature;\r\n    const argon2iHash = await getArgon2i(valueToGetArgon2iHash);\r\n    const signature = utf8_to_b64(argon2iHash);\r\n\r\n    setURL(urlWithoutSignature);\r\n\r\n    setUrlGateway(getUrlGateway(data, signature));\r\n\r\n    setData((oldData) => {\r\n      return { ...oldData, signature };\r\n    });\r\n    setUrlGenerated(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <ContainerRow style={{ justifyContent: 'center' }}>\r\n        <ContainerFlexWidth widthPercent={20} style={{ marginRight: 20, marginBottom: 20 }}>\r\n          <Button\r\n            onClick={() => setTypeFormSelected('url')}\r\n            style={{\r\n              width: '100%',\r\n              textTransform: 'none',\r\n              background: typeFormSelected === 'url' ? '#1976d2' : '#c4c4c4',\r\n            }}\r\n            variant=\"contained\"\r\n          >\r\n            Selected Form to URL\r\n          </Button>\r\n        </ContainerFlexWidth>\r\n\r\n        <ContainerFlexWidth widthPercent={20}>\r\n          <Button\r\n            onClick={() => setTypeFormSelected('json')}\r\n            style={{\r\n              width: '100%',\r\n              textTransform: 'none',\r\n              background: typeFormSelected === 'json' ? '#1976d2' : '#c4c4c4',\r\n            }}\r\n            variant=\"contained\"\r\n          >\r\n            Select Form to Request JSON\r\n          </Button>\r\n        </ContainerFlexWidth>\r\n      </ContainerRow> */}\r\n\r\n      <Container>\r\n        <Form\r\n          base_url={base_url}\r\n          setBaseUrl={setBaseUrl}\r\n          gateway_token={gateway_token}\r\n          setGateway_token={setGateway_token}\r\n          data={data}\r\n          setUrlGenerated={setUrlGenerated}\r\n          handleGenerateURL={() => handleGenerateSignature()}\r\n          setData={setData}\r\n          typeFormSelected={typeFormSelected}\r\n        />\r\n        <ContainerResult>\r\n          {urlGenerated && (\r\n            <>\r\n              {typeFormSelected === \"url\" && (\r\n                <RequestJson\r\n                  type={typeFormSelected}\r\n                  style={{ marginBottom: 20 }}\r\n                  urlGateway={urlGateway}\r\n                  label=\"URL to Gateway Web:\"\r\n                  textButton=\"Open URL Gateway\"\r\n                />\r\n              )}\r\n\r\n              {typeFormSelected === \"json\" && (\r\n                <RequestJson\r\n                  type={typeFormSelected}\r\n                  style={{ marginBottom: 20 }}\r\n                  dataRequest={data}\r\n                  url={url}\r\n                  label=\"JSON Post Request:\"\r\n                  textButton=\"Copy JSON\"\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n          <Button\r\n            size=\"large\"\r\n            onClick={() => handleGenerateSignature()}\r\n            style={{ width: \"100%\", textTransform: \"none\" }}\r\n            variant=\"contained\"\r\n          >\r\n            {`Generate ${typeFormSelected.toUpperCase()}`}\r\n          </Button>\r\n        </ContainerResult>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}